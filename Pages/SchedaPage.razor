@page "/scheda"
@using System.Text.Json
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject IJSRuntime JSRuntime

<h3>Scheda</h3>
<SchedaComponent scheda="@scheda"></SchedaComponent>
<hr />
<button type="button" @onclick="Export">Esporta Scheda</button>
<hr />

<InputFile id="selectedFile" OnChange="Import" style="display: none;" />
<button type="button" onclick="document.getElementById('selectedFile').click();">Importa Scheda</button>

@code {
    SchedaModel scheda = new SchedaModel();

    protected override async Task OnInitializedAsync()
    {
        //SchedaModel ginger = new SchedaModel()
        //    {
        //        Nome = "Ginger Alato",
        //        Giocatore = "Uollazzi"
        //    };

        //ginger.FOR.Base = 60;
        //ginger.DES.Base = 70;
        //ginger.COS.Base = 80;



        scheda = await localStorage.GetItemAsync<SchedaModel>("scheda");
    }

    private async Task Export()
    {
        byte[] file = System.Text.Encoding.UTF8.GetBytes(JsonSerializer.Serialize(scheda));
        string fileName = scheda.Nome + ".json";
        await JSRuntime.InvokeVoidAsync("downloadFile", fileName, JsonSerializer.Serialize(scheda));
    }

    private async Task Import(InputFileChangeEventArgs e)
    {
        var fileContent = new StreamContent(e.File.OpenReadStream());
        var schedaLoaed = await fileContent.ReadFromJsonAsync<SchedaModel>();

        if (schedaLoaed != null)
        {
            scheda = schedaLoaed;
            this.StateHasChanged();            
        }
    }

}
