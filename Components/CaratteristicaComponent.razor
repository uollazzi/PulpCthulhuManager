@if (Caratteristica != null)
{
    <div class="flex flex-col p-2 items-center">
        <div class="text-center leading-6">
            @Caratteristica.Abbreviazione
        </div>
        <div class=" leading-6">
            <input type="number" class="w-12 font-bold text-center text-lg select-all" value="@Caratteristica.Base"
                     @oninput="OnCaratteristicaBaseChanged"></input>
        </div>
        <div class="leading-6 text-xs text-center">@Caratteristica.Arduo/@Caratteristica.Estremo</div>
    </div>
}


@code {
    [Parameter]
    public CaratteristicaModel Caratteristica { get; set; } = new CaratteristicaModel();

    [Parameter]
    public EventCallback<CaratteristicaModel> CaratteristicaChanged { get; set; }

    private async Task OnCaratteristicaBaseChanged(ChangeEventArgs e)
    {
        var v = !string.IsNullOrEmpty(e.Value?.ToString()) ? Convert.ToInt32(e.Value) : 0;
        Caratteristica.Base = v;
        await CaratteristicaChanged.InvokeAsync(Caratteristica);
    }
}
